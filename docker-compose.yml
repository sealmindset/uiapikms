services:
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: apikeydb
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d apikeydb"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes: [ "pgdata:/var/lib/postgresql/data" ]

  user-ui:
    build:
      context: .
      dockerfile: apps/user-ui/Dockerfile
    env_file: .env
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3020
      DATABASE_URL: ${DATABASE_URL:-postgresql://admin:admin@postgres:5432/apikeydb?schema=public}
      SHADOW_DATABASE_URL: ${SHADOW_DATABASE_URL:-postgresql://admin:admin@postgres:5432/apikeydb_shadow?schema=public}
      SESSION_SECRET: ${SESSION_SECRET}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS}
      RATE_LIMIT_MAX: ${RATE_LIMIT_MAX}
      AZURE_TENANT_ID: ${AZURE_TENANT_ID}
      AZURE_CLIENT_ID: ${AZURE_CLIENT_ID}
      AZURE_CLIENT_SECRET: ${AZURE_CLIENT_SECRET}
      OIDC_AUTHORITY: ${OIDC_AUTHORITY}
      OIDC_REDIRECT_URI: ${OIDC_REDIRECT_URI}
      OIDC_LOGOUT_REDIRECT_URI: ${OIDC_LOGOUT_REDIRECT_URI}
      ADMIN_GROUP_ID: ${ADMIN_GROUP_ID}
      ADMIN_EMAILS: ${ADMIN_EMAILS}
      AZURE_KEY_VAULT_URI: ${AZURE_KEY_VAULT_URI}
      USE_MANAGED_IDENTITY: ${USE_MANAGED_IDENTITY}
      APIM_VALIDATE_ENDPOINT_SECRET: ${APIM_VALIDATE_ENDPOINT_SECRET}
      USER_UI_ORIGIN: ${USER_UI_ORIGIN}
      ADMIN_UI_ORIGIN: ${ADMIN_UI_ORIGIN}
      TRUST_PROXY: ${TRUST_PROXY}
    ports: ["3020:3020"]
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3020/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 10

  admin-ui:
    build:
      context: .
      dockerfile: apps/admin-ui/Dockerfile
    env_file: .env
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 4000
      DATABASE_URL: ${DATABASE_URL:-postgresql://admin:admin@postgres:5432/apikeydb?schema=public}
      SHADOW_DATABASE_URL: ${SHADOW_DATABASE_URL:-postgresql://admin:admin@postgres:5432/apikeydb_shadow?schema=public}
      SESSION_SECRET: ${SESSION_SECRET}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS}
      RATE_LIMIT_MAX: ${RATE_LIMIT_MAX}
      AZURE_TENANT_ID: ${AZURE_TENANT_ID}
      AZURE_CLIENT_ID: ${AZURE_CLIENT_ID}
      AZURE_CLIENT_SECRET: ${AZURE_CLIENT_SECRET}
      OIDC_AUTHORITY: ${OIDC_AUTHORITY}
      OIDC_REDIRECT_URI: http://localhost:4000/auth/callback
      OIDC_LOGOUT_REDIRECT_URI: http://localhost:4000/login
      ADMIN_GROUP_ID: ${ADMIN_GROUP_ID}
      ADMIN_EMAILS: ${ADMIN_EMAILS}
      USER_UI_ORIGIN: ${USER_UI_ORIGIN}
      ADMIN_UI_ORIGIN: ${ADMIN_UI_ORIGIN}
      TRUST_PROXY: ${TRUST_PROXY}
    ports: ["4000:4000"]
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 10

volumes:
  pgdata:
